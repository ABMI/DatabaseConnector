% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LocalRsqlite.R
\name{querySql.sqlite}
\alias{querySql.sqlite}
\title{Retrieves data to a local SQLite database}
\usage{
querySql.sqlite(
  connection,
  sql,
  sqliteConnection,
  sqliteTableName,
  errorReportFile = file.path(getwd(), "errorReport.txt"),
  snakeCaseToCamelCase = FALSE
)
}
\arguments{
\item{connection}{The connection to the database server.}

\item{sql}{The SQL to be sent.}

\item{sqliteConnection}{An open connection to a SQLite database, for example as created using \code{RSQLite::dbConnect()}.}

\item{sqliteTableName}{The name of the table in the local SQLite database where the results of the query will be stored.}

\item{errorReportFile}{The file where an error report will be written if an error occurs. Defaults to
'errorReport.txt' in the current working directory.}

\item{snakeCaseToCamelCase}{If true, field names are assumed to use snake_case, and are converted to camelCase.}
}
\value{


Invisibly returns the sqliteConnection. The SQLite database will have a table added with the query results.
}
\description{
This function sends SQL to the server, and returns the results in a local SQLite database.
}
\details{
Retrieves data from the database server and stores it in a local SQLite database. This allows very large
data sets to be retrieved without running out of memory. If an error occurs during SQL execution,
this error is written to a file to facilitate debugging. Null values in the database are converted
to NA values in R.If a table with the same name already exists in the local SQLite database it is replaced.
}
\examples{
\dontrun{
sqliteConnection <- RSQLite::dbConnect(RSQLite::SQLite(), "myLocalDb.sqlite")
connectionDetails <- createConnectionDetails(dbms = "postgresql",
                                             server = "localhost",
                                             user = "root",
                                             password = "blah",
                                             schema = "cdm_v4")
conn <- connect(connectionDetails)
querySql.sqlite(connection = conn, 
                sql = "SELECT * FROM person;", 
                sqliteConnection = sqliteConnection,
                sqliteTableName = "foo")
disconnect(conn)

RSQLite::dbGetQuery(sqliteConnection, "SELECT COUNT(*) FROM foo;")
#   COUNT(*)
# 1     2694
}
}
